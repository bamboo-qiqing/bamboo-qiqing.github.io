import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as p,a as n,d as s,b as l,e as a,r as c}from"./app.b354d91e.js";const i={},r=a(`<h1 id="http-api-接口管理" tabindex="-1"><a class="header-anchor" href="#http-api-接口管理" aria-hidden="true">#</a> HTTP API 接口管理</h1><p>RabbitMQ Management 插件不仅提供了 Web 管理界面，还提供了 HTTP API 接口。</p><h2 id="创建队列" tabindex="-1"><a class="header-anchor" href="#创建队列" aria-hidden="true">#</a> 创建队列</h2><p>比如创建一个队列，可以通过 PUT 方法调用 <code>/api/queues/vhost/name</code> 实现</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@study ~<span class="token punctuation">]</span><span class="token comment"># curl -i -u admin:root -H &quot;content-type:application/json&quot; -XPUT -d &#39;{&quot;auto_delete&quot;:false,&quot;durable&quot;:true,&quot;node&quot;:&quot;rabbit@study&quot;}&#39; http://192.168.4.250:15672/api/queues/%2F/queue</span>

HTTP/1.1 <span class="token number">201</span> Created
server: Cowboy
date: Mon, <span class="token number">29</span> Jun <span class="token number">2020</span> 02:04:22 GMT
content-length: <span class="token number">0</span>
content-type: application/json
vary: accept, accept-encoding, origin

<span class="token comment"># rabbit@study 是你的 rabbitmq 节点，可以通过 rabbitmqctl status 查看到</span>
<span class="token comment"># %2F：就是 / 这个是个特殊符号，所以转移了，默认 vhost 就是 /</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于 <code>-u</code> 和 oath 类似，使用的是 HTTP 基础认证。</p><p>这里的 HTTP API 是完全基于 RESTful 风格的。</p><ul><li><p>GET 方法一般用来获取集群、节点、队列、交换器等信息</p></li><li><p>PUT 方法用来创建资源：如交换器、队列之类</p></li><li><p>DELETE 方法用来删除资源</p></li><li><p>POST 方法也是用来创建资源</p><p>与 PUT 不同的是，POST 创建的是无法用具体名称的资源。比如绑定关系、和发布消息无法指定一个具体的名称</p></li></ul><h2 id="获取队列信息" tabindex="-1"><a class="header-anchor" href="#获取队列信息" aria-hidden="true">#</a> 获取队列信息</h2><p>下面展示使用 GET 来获取前面创建的队列</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@study ~<span class="token punctuation">]</span><span class="token comment"># curl -i -u admin:root -XGET http://192.168.4.250:15672/api/queues/%2F/queue</span>
HTTP/1.1 <span class="token number">200</span> OK
server: Cowboy
date: Mon, <span class="token number">29</span> Jun <span class="token number">2020</span> 02:05:03 GMT
content-length: <span class="token number">1275</span>
content-type: application/json
vary: accept, accept-encoding, origin
cache-control: no-cache

<span class="token punctuation">{</span><span class="token string">&quot;consumer_details&quot;</span>:<span class="token punctuation">[</span><span class="token punctuation">]</span>,<span class="token string">&quot;incoming&quot;</span>:<span class="token punctuation">[</span><span class="token punctuation">]</span>,<span class="token string">&quot;deliveries&quot;</span>:<span class="token punctuation">[</span><span class="token punctuation">]</span>,<span class="token string">&quot;messages_details&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;rate&quot;</span>:0.0<span class="token punctuation">}</span>,<span class="token string">&quot;messages&quot;</span>:0,<span class="token string">&quot;messages_unacknowledged_details&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;rate&quot;</span>:0.0<span class="token punctuation">}</span>,<span class="token string">&quot;messages_unacknowledged&quot;</span>:0,<span class="token string">&quot;messages_ready_details&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;rate&quot;</span>:0.0<span class="token punctuation">}</span>,<span class="token string">&quot;messages_ready&quot;</span>:0,<span class="token string">&quot;reductions_details&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;rate&quot;</span>:0.0<span class="token punctuation">}</span>,<span class="token string">&quot;reductions&quot;</span>:2038,<span class="token string">&quot;node&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;rabbit@study&quot;</span>,<span class="token string">&quot;arguments&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;exclusive&quot;</span>:false,<span class="token string">&quot;auto_delete&quot;</span>:false,<span class="token string">&quot;durable&quot;</span>:true,<span class="token string">&quot;vhost&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;/&quot;</span>,<span class="token string">&quot;name&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;queue&quot;</span>,<span class="token string">&quot;message_bytes_paged_out&quot;</span>:0,<span class="token string">&quot;messages_paged_out&quot;</span>:0,<span class="token string">&quot;backing_queue_status&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;mode&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;default&quot;</span>,<span class="token string">&quot;q1&quot;</span>:0,<span class="token string">&quot;q2&quot;</span>:0,<span class="token string">&quot;delta&quot;</span>:<span class="token punctuation">[</span><span class="token string">&quot;delta&quot;</span>,<span class="token string">&quot;undefined&quot;</span>,0,0,<span class="token string">&quot;undefined&quot;</span><span class="token punctuation">]</span>,<span class="token string">&quot;q3&quot;</span>:0,<span class="token string">&quot;q4&quot;</span>:0,<span class="token string">&quot;len&quot;</span>:0,<span class="token string">&quot;target_ram_count&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;infinity&quot;</span>,<span class="token string">&quot;next_seq_id&quot;</span>:0,<span class="token string">&quot;avg_ingress_rate&quot;</span>:0.0,<span class="token string">&quot;avg_egress_rate&quot;</span>:0.0,<span class="token string">&quot;avg_ack_ingress_rate&quot;</span>:0.0,<span class="token string">&quot;avg_ack_egress_rate&quot;</span>:0.0<span class="token punctuation">}</span>,<span class="token string">&quot;head_message_timestamp&quot;</span>:null,<span class="token string">&quot;message_bytes_persistent&quot;</span>:0,<span class="token string">&quot;message_bytes_ram&quot;</span>:0,<span class="token string">&quot;message_bytes_unacknowledged&quot;</span>:0,<span class="token string">&quot;message_bytes_ready&quot;</span>:0,<span class="token string">&quot;message_bytes&quot;</span>:0,<span class="token string">&quot;messages_persistent&quot;</span>:0,<span class="token string">&quot;messages_unacknowledged_ram&quot;</span>:0,<span class="token string">&quot;messages_ready_ram&quot;</span>:0,<span class="token string">&quot;messages_ram&quot;</span>:0,<span class="token string">&quot;garbage_collection&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;minor_gcs&quot;</span>:0,<span class="token string">&quot;fullsweep_after&quot;</span>:65535,<span class="token string">&quot;min_heap_size&quot;</span>:233,<span class="token string">&quot;min_bin_vheap_size&quot;</span>:46422,<span class="token string">&quot;max_heap_size&quot;</span>:0<span class="token punctuation">}</span>,<span class="token string">&quot;state&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;running&quot;</span>,<span class="token string">&quot;recoverable_slaves&quot;</span>:null,<span class="token string">&quot;consumers&quot;</span>:0,<span class="token string">&quot;exclusive_consumer_tag&quot;</span>:null,<span class="token string">&quot;policy&quot;</span>:null,<span class="token string">&quot;consumer_utilisation&quot;</span>:null,<span class="token string">&quot;idle_since&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;2020-06-29 1:51:47&quot;</span>,<span class="token string">&quot;memory&quot;</span>:10792<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="删除队列" tabindex="-1"><a class="header-anchor" href="#删除队列" aria-hidden="true">#</a> 删除队列</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@study ~<span class="token punctuation">]</span><span class="token comment"># curl -i -u admin:root -XDELETE http://192.168.4.250:15672/api/queues/%2F/queue</span>
HTTP/1.1 <span class="token number">204</span> No Content
server: Cowboy
date: Mon, <span class="token number">29</span> Jun <span class="token number">2020</span> 02:06:44 GMT
content-length: <span class="token number">0</span>
content-type: application/json
vary: accept, accept-encoding, origin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="完整-api" tabindex="-1"><a class="header-anchor" href="#完整-api" aria-hidden="true">#</a> 完整 API</h2><p>这可以访问 web 管理界面的 API 端点获取</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>http://192.168.4.250:15672/api
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这里就不记录书上完整的列表了。</p><p>WEB API 通常方便客户端调用。在命令行有类似的工具 ：rabbitmqadmin</p><h2 id="rabbitmqadmin" tabindex="-1"><a class="header-anchor" href="#rabbitmqadmin" aria-hidden="true">#</a> rabbitmqadmin</h2>`,19),u={href:"https://www.rabbitmq.com/management-cli.html",target:"_blank",rel:"noopener noreferrer"},d=a(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> http://<span class="token punctuation">{</span>hostname<span class="token punctuation">}</span>:15672/cli/rabbitmqadmin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>笔者这里通过如下方式下载</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
<span class="token punctuation">[</span>root@study ~<span class="token punctuation">]</span><span class="token comment"># wget http://192.168.4.250:15672/cli/rabbitmqadmin</span>
--2020-06-29 <span class="token number">10</span>:30:31--  http://192.168.4.250:15672/cli/rabbitmqadmin
正在连接 <span class="token number">192.168</span>.4.250:15672<span class="token punctuation">..</span>. 已连接。
已发出 HTTP 请求，正在等待回应<span class="token punctuation">..</span>. <span class="token number">200</span> OK
长度：37698 <span class="token punctuation">(</span>37K<span class="token punctuation">)</span> <span class="token punctuation">[</span>application/octet-stream<span class="token punctuation">]</span>
正在保存至: “rabbitmqadmin”

<span class="token number">100</span>%<span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token punctuation">]</span> <span class="token number">37,698</span>      --.-K/s 用时 0s

<span class="token number">2020</span>-06-29 <span class="token number">10</span>:30:31 <span class="token punctuation">(</span><span class="token number">739</span> MB/s<span class="token punctuation">)</span> - 已保存 “rabbitmqadmin” <span class="token punctuation">[</span><span class="token number">37698</span>/37698<span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># 添加执行权限</span>
<span class="token punctuation">[</span>root@study ~<span class="token punctuation">]</span><span class="token comment"># chmod +x rabbitmqadmin</span>
<span class="token comment"># 如果使用中出现不能使用的情况，可能是缺少 Python,版本为 2.x; </span>
<span class="token comment"># 版本根据你用的 RabbitMQ 版本不同而不同，上面官方页面也介绍了</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>就可以通过该工具访问了，如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 创建 queue1 的队列</span>
<span class="token punctuation">[</span>root@study ~<span class="token punctuation">]</span><span class="token comment"># ./rabbitmqadmin -u admin -p root declare queue name=queue1</span>
queue declared

<span class="token comment"># 查看队列列表</span>
<span class="token punctuation">[</span>root@study ~<span class="token punctuation">]</span><span class="token comment"># ./rabbitmqadmin list queues</span>
+------------+----------+
<span class="token operator">|</span>    name    <span class="token operator">|</span> messages <span class="token operator">|</span>
+------------+----------+
<span class="token operator">|</span> queue1     <span class="token operator">|</span> <span class="token number">0</span>        <span class="token operator">|</span>
<span class="token operator">|</span> queue2     <span class="token operator">|</span> <span class="token number">0</span>        <span class="token operator">|</span>
<span class="token operator">|</span> queue33    <span class="token operator">|</span> <span class="token number">0</span>        <span class="token operator">|</span>
<span class="token operator">|</span> queue_demo <span class="token operator">|</span> <span class="token number">149</span>      <span class="token operator">|</span>
+------------+----------+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>还可以通过 <code>--help</code> 来自力更生，查看支持哪些语法参数</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
<span class="token punctuation">[</span>root@study ~<span class="token punctuation">]</span><span class="token comment"># ./rabbitmqadmin --help</span>
Usage
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
  rabbitmqadmin <span class="token punctuation">[</span>options<span class="token punctuation">]</span> subcommand

Options
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
--help, <span class="token parameter variable">-h</span>              show this <span class="token builtin class-name">help</span> message and <span class="token builtin class-name">exit</span>
<span class="token parameter variable">--config</span><span class="token operator">=</span>CONFIG, <span class="token parameter variable">-c</span> CONFIG
                        configuration <span class="token function">file</span> <span class="token punctuation">[</span>default: ~/.rabbitmqadmin.conf<span class="token punctuation">]</span>
<span class="token parameter variable">--node</span><span class="token operator">=</span>NODE, <span class="token parameter variable">-N</span> NODE    <span class="token function">node</span> described <span class="token keyword">in</span> the configuration <span class="token function">file</span> <span class="token punctuation">[</span>default:
                        <span class="token string">&#39;default&#39;</span> only <span class="token keyword">if</span> configuration <span class="token function">file</span> is specified<span class="token punctuation">]</span>
<span class="token parameter variable">--host</span><span class="token operator">=</span>HOST, <span class="token parameter variable">-H</span> HOST    connect to <span class="token function">host</span> HOST <span class="token punctuation">[</span>default: localhost<span class="token punctuation">]</span>
<span class="token parameter variable">--port</span><span class="token operator">=</span>PORT, <span class="token parameter variable">-P</span> PORT    connect to port PORT <span class="token punctuation">[</span>default: <span class="token number">15672</span><span class="token punctuation">]</span>
<span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function k(m,b){const e=c("ExternalLinkIcon");return o(),p("div",null,[r,n("p",null,[s("需要你安装该工具(是一个专用的 HTTP 客户端)，从 "),n("a",u,[s("官方下载"),l(e)]),s("，也可以通过本机 api 下载")]),d])}const g=t(i,[["render",k],["__file","06.html.vue"]]);export{g as default};
