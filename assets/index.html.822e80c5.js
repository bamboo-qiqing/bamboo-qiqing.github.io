import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as r,c as n,a as e,b as a,w as i,e as p,r as b,d as l}from"./app.b354d91e.js";const c={},s=p('<h1 id="rabbitmq-配置" tabindex="-1"><a class="header-anchor" href="#rabbitmq-配置" aria-hidden="true">#</a> RabbitMQ 配置</h1><p>一般情况下，可以使用默认的配置。大多数情况下都可以不用修改配置。为了有效的利用 RabbitMQ，调节系统参数范围内的参数来达到定制化的需求</p><p>RabbitMQ 提供了三种方式来定制化服务：</p><ol><li><p>环境变量：Enviroment Variables</p><p>RabbitMQ 服务端参数可以通过环境变量进行配置。</p><p>例如：节点名称、RabbitMQ 配置文件地址、节点内部通信端口等</p></li><li><p>配置文件：Configuration File</p><p>可定义 RabbitMQ 服务和插件设置。</p><p>例如：TCP 监听端口，以及其他网络相关的设置、内存限制、磁盘限制等</p></li><li><p>运行时参数和策略：Runtime Parameters and Policies</p><p>可以在运行时定义集群层面的服务设置</p></li></ol><p>对于不同的操作系统和不同的 RabbitMQ 安装包，相应的配置会有所变化，包括配置文件地址等。需要注意下。</p>',5);function d(m,_){const t=b("RouterLink");return r(),n("div",null,[s,e("ul",null,[e("li",null,[a(t,{to:"/code/rabbitmq/06/01.html"},{default:i(()=>[l("环境变量")]),_:1})]),e("li",null,[a(t,{to:"/code/rabbitmq/06/02.html"},{default:i(()=>[l("配置文件")]),_:1})]),e("li",null,[a(t,{to:"/code/rabbitmq/06/03.html"},{default:i(()=>[l("Web 参数及策略")]),_:1})])])])}const f=o(c,[["render",d],["__file","index.html.vue"]]);export{f as default};
