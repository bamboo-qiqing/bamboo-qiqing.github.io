import{_ as r}from"./presentationAndStatistics-1654518716915.0e09bf9b.js";import{_ as c}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as i,c as n,a as t,d as e,b as s,w as o,e as d,r as l}from"./app.b354d91e.js";const h={},p=d('<p>维护好注释可以使我们的项目更加方便的维护，提高开发效率。（如果有其他框架需要兼容，哪怕是您公司自己的框架以及注解，也欢迎提供） 后期会提供一个自定义功能，可以便捷的添加自己的框架以及注解支持。</p><p>作为一个英语不怎么好的人来说，注释的重要性不言而喻。相信对于很大一部分开发者来说也是一件很重要的事情。毕竟对于开发者来说，知识的整理和代码的整理都是无比的重要，URL接口当然也是如此。</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>注释的主要由注释的开启（默认开启），优先顺序和自定义注释（重命名）三个功能点。 重命名提供了类级别和方法级别的注释。</p></div><h3 id="注释的显示" tabindex="-1"><a class="header-anchor" href="#注释的显示" aria-hidden="true">#</a> 注释的显示</h3><p>注释的显示可以在当前项目列表，其它项目列表，和历史点击中展现，该方式很好的帮助开发者更好的维护项目。</p><p><img src="'+r+'" alt="当前项目Restful Api列表"></p><h3 id="注释的配置" tabindex="-1"><a class="header-anchor" href="#注释的配置" aria-hidden="true">#</a> 注释的配置</h3>',7),_=t("h3",{id:"重命名",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#重命名","aria-hidden":"true"},"#"),e(" 重命名")],-1),u=t("p",null,"重命名功能主要是为了方便开发者自己维护Class和Method的注释，很多时候，由于原有的注释杂乱无章，不能有效的提供给开发者良好的提示，所以扩展了自定义注释（重命名），无代码侵入的方式，是它的特点之一。",-1);function f(m,E){const a=l("RouterLink");return i(),n("div",null,[p,t("p",null,[e("注释的配置主要由"),s(a,{to:"/projects/restfulCloud/setting.html#%E6%98%AF%E5%90%A6%E5%BC%80%E5%90%AF%E6%B3%A8%E9%87%8A"},{default:o(()=>[e("是否开启注释")]),_:1}),e("和"),s(a,{to:"/projects/restfulCloud/setting.html#%E6%B3%A8%E9%87%8A%E7%9A%84%E4%BC%98%E5%85%88%E9%A1%BA%E5%BA%8F"},{default:o(()=>[e("注释的优先顺序")]),_:1}),e("两个功能点。 详情查看"),s(a,{to:"/projects/restfulCloud/setting.html#%E6%B3%A8%E9%87%8A%E9%85%8D%E7%BD%AE"},{default:o(()=>[e("注释的配置")]),_:1}),e("。")]),_,u])}const C=c(h,[["render",f],["__file","describe.html.vue"]]);export{C as default};
