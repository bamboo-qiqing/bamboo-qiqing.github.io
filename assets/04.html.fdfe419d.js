import{_ as s}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as n,a as e,d as t}from"./app.b354d91e.js";const a="/assets/image-20200624165801409.21c0dc68.png",c={},_=e("h1",{id:"延迟队列",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#延迟队列","aria-hidden":"true"},"#"),t(" 延迟队列")],-1),r=e("p",null,[t("在 AMQP 协议或 RabbitMQ 中，本身没有直接支持延迟队列的功能。可以 "),e("strong",null,"通过 DLX 和 TTL 模拟出延迟队列的功能。")],-1),l=e("p",null,[e("img",{src:a,alt:"image-20200624165801409"})],-1),i=e("p",null,[t("上图是死信队列的用法，也是延迟队列的用法。唯一不同的是，消费者订阅的是 "),e("strong",null,"死信队列"),t("，没有消费者订阅普通队列的话，当消息过期时间到了，就会被路由到死信队列，这就达成了，消息被延迟消费的目的。")],-1),d=[_,r,l,i];function h(m,u){return o(),n("div",null,d)}const g=s(c,[["render",h],["__file","04.html.vue"]]);export{g as default};
